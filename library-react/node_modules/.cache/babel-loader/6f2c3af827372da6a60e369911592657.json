{"ast":null,"code":"var _jsxFileName = \"/home/d/dev/projects/Library/library-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport uniqid from 'uniqid';\nimport './App.css';\nimport NavBar from './Components/NavBar';\nimport GameTile from './Components/GameTile';\nimport QueryMenu from './Components/QueryMenu';\n\n// import {getFirestore, collection, getDocs, addDoc, serverTimestamp, query } from 'firebase/firestore/lite'\nimport { onSnapshot, getFirestore, addDoc, query, collection, setDoc, deleteDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const db = getFirestore(props.firebaseapp);\n\n  // async function handleTestButtonClick(e){\n  //   e.preventDefault();\n  //   console.log(`you clicked the test button`);\n  //   try{\n  //     const docRef = await addDoc(collection(db, \"testCollection\"), {\n  //       firstName: \"bugger\",\n  //       lastName: \"everything\",\n  //       year: 2022,\n  //       timeStamp: serverTimestamp()\n  //     });\n  //     console.log('Document written with id: ', docRef.id);\n  //   } catch (e) {\n  //     console.log(\"Error adding document: \", e);\n  //   }\n  // }\n\n  // const [querySnapshot, setQuerySnapshot] = useState(\n  //   async () => {await getDocs(collection(db, \"testCollection\"))}\n  // );\n\n  // function handleTestButtonClick1(e){\n  //   e.preventDefault();\n  //   getTestCollection(db);\n  // }\n\n  // async function getTestCollection(db){\n  //   const testCol = collection(db, 'testCollection');\n  //   const testSnapshot = await getDocs(testCol);\n  //   const contentList = testSnapshot.docs.map(doc => doc.data());\n  //   console.log(contentList);\n  //   contentList.forEach( (doc) => {\n  //     console.log(doc.timeStamp);\n  //   })\n  //   return contentList;\n  // }\n\n  // Init the shelf that stores game objects and data\n  const [shelfData, setShelfData] = useState([]);\n  // Init the snapshot keeping the front-end up to date with the server's databse\n  useEffect(() => {\n    const q = query(collection(db, 'shelf'));\n    const unsubscribe = onSnapshot(q, qSnapshot => {\n      const datums = [];\n      qSnapshot.forEach(doc => {\n        // console.log(doc)\n        datums.push({\n          data: doc.data(),\n          key: uniqid(),\n          docRef: doc.ref\n        });\n        // docRef: doc(db, 'shelf', doc.id)});\n        setShelfData(datums);\n      });\n      // console.log(`Current Shelf Data: `, datums);\n    });\n\n    return () => unsubscribe();\n  }, [db]);\n  const myLibrary = [];\n  shelfData.forEach(element => {\n    const tile = /*#__PURE__*/_jsxDEV(GameTile, {\n      gameData: element.data,\n      docRef: element.docRef,\n      handleClickModify: handleClickModify\n    }, element.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }, this);\n    myLibrary.push(tile);\n  });\n\n  // ------------------ queryMenu toggles and functionality ------------------\n\n  const [menuOpen, toggleMenuOpen] = useState(false);\n  function handleToggleMenu() {\n    // console.log(`You're trying to toggle queryMenu!`);\n    if (!menuOpen) {\n      // console.log(`queryMenu is currently not open, Opening a new queryMenu...`);\n      // DO THE THING TO OPEN THE MENU, something something show menuOpen\n      toggleMenuOpen(true);\n    } else {\n      // console.log(`queryMenu is already open! Closing queryMenu...`)\n      toggleMenuOpen(false);\n    }\n  }\n  function handleClickMenuOpen(e) {\n    e.preventDefault();\n    // console.log(`You clicked a button to open queryMenu. Checking queryMenu's state...`)\n    if (!menuOpen) {\n      // console.log(`queryMenu is currently closed! Opening queryMenu`);\n      handleQueryMenuGameUpdate(null, null);\n      handleToggleMenu();\n    } else {\n      // console.log(`queryMenu is already open! I can do nothing until the currently existing queryMenu has been closed!`);\n    }\n  }\n  function handleClickModify(e, gameData, docRef) {\n    e.preventDefault();\n    // console.log(`You are opening the queryMenu on an existing GameTile!`);\n    if (!menuOpen) {\n      // console.log(`Its data is: `, gameData, docRef);\n      // console.log(`queryMenu is currently closed! Opening queryMenu`);\n      handleQueryMenuGameUpdate(gameData, docRef);\n      handleToggleMenu();\n    } else {\n      // console.log(`queryMenu is already open! I can do nothing until the currently existing queryMenu has been closed!`);\n    }\n  }\n  async function addNewDoc(e, queryMenuData) {\n    e.preventDefault();\n    // console.log(\"You're trying to add a new doc. Its data is: \", queryMenuData);\n    // console.log('Trying to write new data to collection...');\n    const docRef = await addDoc(collection(db, \"shelf\"), queryMenuData);\n    console.log('Document written with ID: ', docRef.id);\n  }\n  const [queryMenuGameData, setQueryMenuGameData] = useState(null);\n  const [queryMenuGameRef, setQueryMenuGameRef] = useState(null);\n  // When this function is called with null in gameData and docRef, the queryMenu opens in its default state, whereas when this function is passed gameData and a gameRef from a Modify onClick, it updates queryMenu to use the new values of the targeted click\n  function handleQueryMenuGameUpdate(gameData, docRef) {\n    gameData ? setQueryMenuGameData(gameData) : setQueryMenuGameData(null);\n    docRef ? setQueryMenuGameRef(docRef) : setQueryMenuGameRef(null);\n  }\n  async function deleteGameTile(e, gameData, gameRef) {\n    e.preventDefault();\n    // console.log(`Do the thing to delete this GameTile`);\n    // console.log(`The current data trying to be deleted is: `, gameData, gameRef);\n    await deleteDoc(gameRef);\n  }\n  async function updateGameTile(e, gameData, gameRef) {\n    e.preventDefault();\n    // console.log(`Do the thing to update the existing game within the firebase`)\n    // console.log(`New data is: `, gameData, gameRef)\n\n    await setDoc(gameRef, gameData, {\n      merge: true\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shelf\",\n      children: myLibrary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addSlot\",\n      onClick: e => {\n        handleClickMenuOpen(e);\n      },\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(QueryMenu, {\n      handleToggleMenu: handleToggleMenu,\n      addNewDoc: addNewDoc,\n      queryMenuGameData: queryMenuGameData,\n      queryMenuGameRef: queryMenuGameRef,\n      deleteGameTile: deleteGameTile,\n      updateGameTile: updateGameTile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"51Gg5AHN0WtO1OMTTzGpoXtViZo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","uniqid","NavBar","GameTile","QueryMenu","onSnapshot","getFirestore","addDoc","query","collection","setDoc","deleteDoc","App","props","db","firebaseapp","shelfData","setShelfData","q","unsubscribe","qSnapshot","datums","forEach","doc","push","data","key","docRef","ref","myLibrary","element","tile","handleClickModify","menuOpen","toggleMenuOpen","handleToggleMenu","handleClickMenuOpen","e","preventDefault","handleQueryMenuGameUpdate","gameData","addNewDoc","queryMenuData","console","log","id","queryMenuGameData","setQueryMenuGameData","queryMenuGameRef","setQueryMenuGameRef","deleteGameTile","gameRef","updateGameTile","merge"],"sources":["/home/d/dev/projects/Library/library-react/src/App.js"],"sourcesContent":["import React, {useEffect, useState } from 'react';\nimport uniqid from 'uniqid';\nimport './App.css';\nimport NavBar from './Components/NavBar';\nimport GameTile from './Components/GameTile';\nimport QueryMenu from './Components/QueryMenu';\n\n// import {getFirestore, collection, getDocs, addDoc, serverTimestamp, query } from 'firebase/firestore/lite'\nimport {onSnapshot, getFirestore, addDoc, query, collection, setDoc, deleteDoc} from \"firebase/firestore\"\n\n\n\nfunction App(props) {\n\n  const db = getFirestore(props.firebaseapp);\n\n  // async function handleTestButtonClick(e){\n  //   e.preventDefault();\n  //   console.log(`you clicked the test button`);\n  //   try{\n  //     const docRef = await addDoc(collection(db, \"testCollection\"), {\n  //       firstName: \"bugger\",\n  //       lastName: \"everything\",\n  //       year: 2022,\n  //       timeStamp: serverTimestamp()\n  //     });\n  //     console.log('Document written with id: ', docRef.id);\n  //   } catch (e) {\n  //     console.log(\"Error adding document: \", e);\n  //   }\n  // }\n\n  // const [querySnapshot, setQuerySnapshot] = useState(\n  //   async () => {await getDocs(collection(db, \"testCollection\"))}\n  // );\n\n  // function handleTestButtonClick1(e){\n  //   e.preventDefault();\n  //   getTestCollection(db);\n  // }\n\n  // async function getTestCollection(db){\n  //   const testCol = collection(db, 'testCollection');\n  //   const testSnapshot = await getDocs(testCol);\n  //   const contentList = testSnapshot.docs.map(doc => doc.data());\n  //   console.log(contentList);\n  //   contentList.forEach( (doc) => {\n  //     console.log(doc.timeStamp);\n  //   })\n  //   return contentList;\n  // }\n\n\n  // Init the shelf that stores game objects and data\n  const [shelfData, setShelfData] = useState([]);\n  // Init the snapshot keeping the front-end up to date with the server's databse\n  useEffect(() => {\n    const q = query(collection(db, 'shelf'));\n    const unsubscribe = onSnapshot(q, (qSnapshot) => {\n      const datums = [];\n      qSnapshot.forEach( (doc) => {\n        // console.log(doc)\n        datums.push({\n          data: doc.data(),\n          key: uniqid(),\n          docRef: doc.ref})\n          // docRef: doc(db, 'shelf', doc.id)});\n        setShelfData(datums);\n      })\n      // console.log(`Current Shelf Data: `, datums);\n    })\n    return () => unsubscribe();\n  }, [db])\n\n\n\n  const myLibrary = [];\n  shelfData.forEach(element => {\n    const tile = <GameTile gameData={element.data} \n                    key={element.key}\n                    docRef={element.docRef}\n                    handleClickModify={handleClickModify}/>\n    myLibrary.push(tile)\n  })\n\n\n\n  // ------------------ queryMenu toggles and functionality ------------------\n\n  const [menuOpen, toggleMenuOpen] = useState(false);\n  function handleToggleMenu(){\n    // console.log(`You're trying to toggle queryMenu!`);\n    if(!menuOpen){\n      // console.log(`queryMenu is currently not open, Opening a new queryMenu...`);\n      // DO THE THING TO OPEN THE MENU, something something show menuOpen\n      toggleMenuOpen(true);\n    } else {\n      // console.log(`queryMenu is already open! Closing queryMenu...`)\n      toggleMenuOpen(false);\n    }\n  }\n\n  function handleClickMenuOpen(e){\n    e.preventDefault();\n    // console.log(`You clicked a button to open queryMenu. Checking queryMenu's state...`)\n    if(!menuOpen){\n      // console.log(`queryMenu is currently closed! Opening queryMenu`);\n      handleQueryMenuGameUpdate(null, null);\n      handleToggleMenu()\n    } else {\n      // console.log(`queryMenu is already open! I can do nothing until the currently existing queryMenu has been closed!`);\n    }\n  }\n\n  function handleClickModify(e, gameData, docRef){\n    e.preventDefault();\n    // console.log(`You are opening the queryMenu on an existing GameTile!`);\n    if(!menuOpen){\n      // console.log(`Its data is: `, gameData, docRef);\n      // console.log(`queryMenu is currently closed! Opening queryMenu`);\n      handleQueryMenuGameUpdate(gameData, docRef);\n      handleToggleMenu()\n    } else {\n      // console.log(`queryMenu is already open! I can do nothing until the currently existing queryMenu has been closed!`);\n    }\n  }\n\n  async function addNewDoc(e, queryMenuData) {\n    e.preventDefault();\n    // console.log(\"You're trying to add a new doc. Its data is: \", queryMenuData);\n    // console.log('Trying to write new data to collection...');\n    const docRef = await addDoc(collection(db, \"shelf\"), queryMenuData);\n    console.log('Document written with ID: ', docRef.id);\n\n  }\n\n\n\n  const [queryMenuGameData, setQueryMenuGameData] = useState(null);\n  const [queryMenuGameRef, setQueryMenuGameRef] = useState(null);\n  // When this function is called with null in gameData and docRef, the queryMenu opens in its default state, whereas when this function is passed gameData and a gameRef from a Modify onClick, it updates queryMenu to use the new values of the targeted click\n  function handleQueryMenuGameUpdate(gameData, docRef){\n    gameData ? setQueryMenuGameData(gameData) : setQueryMenuGameData(null);\n    docRef ? setQueryMenuGameRef(docRef) : setQueryMenuGameRef(null);\n  }\n\n  async function deleteGameTile(e, gameData, gameRef){\n    e.preventDefault();\n    // console.log(`Do the thing to delete this GameTile`);\n    // console.log(`The current data trying to be deleted is: `, gameData, gameRef);\n    await deleteDoc(gameRef);\n  }\n\n  async function updateGameTile(e, gameData, gameRef){\n    e.preventDefault();\n    // console.log(`Do the thing to update the existing game within the firebase`)\n    // console.log(`New data is: `, gameData, gameRef)\n    \n    \n    await setDoc(gameRef, gameData, {merge : true});\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <NavBar/>\n\n      {/* This is the test button div, set to not display, but easily toggled visibility if I need to access these buttons */}\n      {/* <div className='devTestButtons' style={{display: 'none'}}>\n        Shiiiyeeet\n        <button onClick={(e) => {\n          handleTestButtonClick(e);\n        }}>test button</button>\n        <button onClick={(e) => {\n          handleTestButtonClick1(e);\n        }}>test button 1</button>\n        <button onClick={(e) => {\n        handleShelfData(e);\n      }}>log shelf data</button>\n      </div> */}\n\n\n      <div className='shelf'>\n        {myLibrary}\n      </div>\n\n\n      <button className='addSlot'\n        onClick={(e) => {\n          handleClickMenuOpen(e);\n        }}> + </button>\n\n\n      {menuOpen && <QueryMenu \n        handleToggleMenu={handleToggleMenu}\n        addNewDoc={addNewDoc}\n        queryMenuGameData={queryMenuGameData}\n        queryMenuGameRef={queryMenuGameRef}\n        deleteGameTile={deleteGameTile}\n        updateGameTile={updateGameTile}/>}\n\n\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}