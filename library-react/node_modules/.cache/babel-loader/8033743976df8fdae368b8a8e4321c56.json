{"ast":null,"code":"var _jsxFileName = \"/home/d/dev/projects/Library/library-react/src/Components/NavBar.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useState } from 'react';\nimport '../Styling/Navbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faBars } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavBar(props) {\n  _s();\n  const [aboutModal, toggleAboutModal] = useState(false);\n  function handleToggleAboutModal() {\n    // console.log(`you'd like to toggle the About Modal, which is currently: `, aboutModal);\n    toggleAboutModal(!aboutModal);\n  }\n  function handleAboutClick(e) {\n    e.preventDefault();\n    handleToggleAboutModal();\n  }\n  const [optionsModal, toggleOptionsModal] = useState(false);\n  function handleToggleOptionsModal() {\n    // console.log(`you'd like to toggle the Options Modal, which is currently: `, optionsModal);\n    toggleOptionsModal(!optionsModal);\n  }\n  function handleOptionsClick(e) {\n    e.preventDefault();\n    handleToggleOptionsModal();\n  }\n  function handleLoadSampleGamesButtonClick(e) {\n    e.preventDefault();\n    console.log(`You clicked the Load Sample Games button! My functionality isn't implemented yet, ah nuuuuuuu broski`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbarContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navLeft\",\n      children: \"D Roemer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navTitle\",\n      children: \"Video Game Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"navOptionsToggle\",\n        onClick: e => {\n          handleOptionsClick(e);\n        },\n        children: [\"Options\", optionsModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionsContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsMenu\",\n            children: [\"Options Menu\", /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"sampleGames\",\n              class: \"optionsSampleButton\",\n              onClick: e => {\n                handleLoadSampleGamesButtonClick(e);\n              },\n              children: \"Load Sample Games?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"navAboutToggle\",\n        onClick: e => {\n          handleAboutClick(e);\n        },\n        children: [\"About\", aboutModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aboutContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aboutContent\",\n            children: \"This project is designed to explore objects and prototyping functionality. Each game is stored as an independant object with inherent values, like name, or a string containing a link to a logo. In addition, each gameObject has an initGame function that is called from the object's prototype, to save on individual object memory and provide for future scalability. Whenever a new game is initialized, a reference to the object is added to the myLibrary[], which contains references to all active gameObjects. The dynamic functions of the page are all handled via eventListeners that hand-off the app's current state via global variables (bad security practice, I know, but saves on overhead). Finally, the app also uses a primative localStorage system, in which any changes made to the page on a browser that has localStorage available, are written to localStorage. Whenever the page is initialized, a reader function populates the webpage with any previously existing gameObjects from localStorage, maintaining state across multiple sessions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"navPortfolioToggle\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/dominicroemer\",\n          children: \"Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faBars,\n      className: \"navMenuIcon\",\n      onClick: e => e.preventDefault()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faUser,\n      className: \"navMenuIcon\",\n      onClick: e => e.preventDefault()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"YswxvGWRFPQVeNJe3kqInrk2VA8=\");\n_c = NavBar;\n;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","Component","useState","FontAwesomeIcon","faUser","faBars","NavBar","props","aboutModal","toggleAboutModal","handleToggleAboutModal","handleAboutClick","e","preventDefault","optionsModal","toggleOptionsModal","handleToggleOptionsModal","handleOptionsClick","handleLoadSampleGamesButtonClick","console","log"],"sources":["/home/d/dev/projects/Library/library-react/src/Components/NavBar.js"],"sourcesContent":["import React, { Component, useState } from 'react';\nimport '../Styling/Navbar.css'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faUser, faBars } from '@fortawesome/free-solid-svg-icons'\n\nfunction NavBar(props) {\n\n    const [aboutModal, toggleAboutModal] = useState(false);\n    function handleToggleAboutModal(){\n        // console.log(`you'd like to toggle the About Modal, which is currently: `, aboutModal);\n        toggleAboutModal(!aboutModal);\n    }\n\n    function handleAboutClick(e) {\n        e.preventDefault();\n        handleToggleAboutModal();\n    }\n\n    const [optionsModal, toggleOptionsModal] = useState(false);\n    function handleToggleOptionsModal(){\n        // console.log(`you'd like to toggle the Options Modal, which is currently: `, optionsModal);\n        toggleOptionsModal(!optionsModal);\n    }\n\n    function handleOptionsClick(e){\n        e.preventDefault();\n        handleToggleOptionsModal();\n    }\n\n    function handleLoadSampleGamesButtonClick(e){\n        e.preventDefault();\n        console.log(`You clicked the Load Sample Games button! My functionality isn't implemented yet, ah nuuuuuuu broski`);\n    }\n\n\n    return (\n        <nav className='navbarContainer' >\n            \n            <div className='navLeft'>\n                D Roemer             \n                {/* <img src=\"images/droemer.png\" class=\"nav-droemer\">  */}\n                {/* <FontAwesomeIcon icon={faUser} onClick={e=> preventDefault()}/> */}\n            </div>\n            \n            <div className=\"navTitle\">\n                Video Game Library\n            </div>\n            \n\n            <ul>\n                <li className=\"navOptionsToggle\" onClick={(e) => {handleOptionsClick(e);}}>Options\n                    {optionsModal && \n                        <div className=\"optionsContainer\">\n                            <div className=\"optionsMenu\">\n                                Options Menu\n                                <button id=\"sampleGames\" class=\"optionsSampleButton\"\n                                    onClick={(e) => {handleLoadSampleGamesButtonClick(e)}}\n                                    >\n                                    Load Sample Games?\n                                </button>\n                            </div>\n                        </div>\n                    \n                    }\n                </li>\n                <li className=\"navAboutToggle\" onClick={(e)=> {handleAboutClick(e);}}>About\n                    {aboutModal && \n                        <div className=\"aboutContainer\">\n                            <div className=\"aboutContent\">\n                                This project is designed to explore objects and prototyping functionality. Each game is stored as an independant object with inherent values, like name, or a string containing a link to a logo. \n                                In addition, each gameObject has an initGame function that is called from the object's prototype, to save on individual object memory and provide for future scalability.\n                                Whenever a new game is initialized, a reference to the object is added to the myLibrary[], which contains references to all active gameObjects. The dynamic functions of the page are all handled via eventListeners that hand-off the app's current state via global variables (bad security practice, I know, but saves on overhead). \n                                Finally, the app also uses a primative localStorage system, in which any changes made to the page on a browser that has localStorage available, are written to localStorage. Whenever the page is initialized, a reader function populates the webpage with any previously existing gameObjects from localStorage, maintaining state across multiple sessions. \n    \n                            </div>\n                        </div>\n                    }\n\n\n\n                </li>\n                <li className=\"navPortfolioToggle\">\n                    <a href=\"https://github.com/dominicroemer\">Portfolio</a>\n                </li>\n            </ul>\n\n            {/* <img src=\"images/nav-menu.png\" class=\"nav-menu-icon\"> */}\n\n            <FontAwesomeIcon icon={faBars} \n                className=\"navMenuIcon\"\n                onClick={e=> e.preventDefault()}/>\n            <FontAwesomeIcon icon={faUser} \n                className='navMenuIcon'\n                onClick={e=> e.preventDefault()}/>\n\n\n        </nav>\n    )\n\n};\n\nexport default NavBar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}